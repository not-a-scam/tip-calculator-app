{"version":3,"sources":["components/Footer.jsx","images/logo.svg","components/Header.jsx","components/Button.jsx","components/CustomInput.jsx","components/TextInput.jsx","images/icon-dollar.svg","images/icon-person.svg","components/ResultHeading.jsx","components/Result.jsx","components/ResultsCard.jsx","components/App.jsx","index.js"],"names":["Footer","className","href","target","rel","Header","src","logo","alt","Button","props","classes","join","onClick","id","parseInt","value","content","CustomInput","type","placeholder","onChange","event","TextInput","useState","setClasses","visibility","setVisibility","isTop","title","style","icon","newValue","boxShadow","ResultHeading","subtitle","Result","Math","round","toFixed","ResultsCard","tip","total","reset","App","tipInputGrp","setTipInputGrp","tipValue","setTipValue","bill","setBill","people","setPeople","customTip","setCustomTip","tipAmount","setTipAmount","totalAmount","setTotalAmount","onClickTipInput","btns","filter","item","map","btn","onCustomTipChange","dollar","input","index","length","person","window","location","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88ba173b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Footer(){\r\n\r\n    const femLink = \"https://www.frontendmentor.io?ref=challenge\";\r\n    const profileLink = \"https://github.com/not-a-scam\";\r\n\r\n    return <footer>\r\n    <div className=\"attribution\">\r\n      Challenge by <a href={femLink} target=\"_blank\" rel=\"noreferrer\">Frontend Mentor</a>. \r\n      Coded by <a href={profileLink}>notascam</a>.\r\n    </div>\r\n  </footer>;\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import React from \"react\";\r\nimport logo from \"../images/logo.svg\"\r\n\r\nfunction Header(){\r\n    return <div className=\"container-fluid\">\r\n        <div className=\"title\">\r\n        <img src={logo} alt=\"Dollar symbol\" />\r\n        </div>\r\n  </div>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Button(props){\r\n    const classes = props.classes.join(\" \");\r\n\r\n    return <button \r\n        className={classes} \r\n        onClick={() => {\r\n            props.onClick(props.id, parseInt(props.id))\r\n        }}\r\n        value={props.id}\r\n        >{props.content}</button>;\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nfunction CustomInput(props){\r\n    const classes = props.classes.join(\" \");\r\n\r\n    return (\r\n    <input \r\n        type=\"Number\" \r\n        className={classes} \r\n        placeholder={props.content} \r\n        onClick={() => {\r\n            props.onClick(props.id, parseInt(props.value))\r\n        }}\r\n        onChange={(event) => {\r\n            const value = event.target.value;\r\n            props.onChange(value)\r\n        }}\r\n        value={props.value}\r\n    />);\r\n}\r\n\r\nexport default CustomInput;","import React, { useState } from \"react\";\r\n\r\nfunction TextInput(props){\r\n    const [classes, setClasses] = useState({});\r\n    const [visibility, setVisibility] = useState({visibility: \"hidden\"});\r\n\r\n    function checkInput(value) {\r\n        if(value !== \"0\" && value){\r\n            setClasses({});\r\n            setVisibility({visibility: \"hidden\"});\r\n        } else {\r\n            setClasses({boxShadow: \"0 0 0 2pt hsl(27, 64%, 52%)\"});\r\n            setVisibility({visibility: \"visible\"});\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 col-7\">\r\n                <h2 className={props.isTop ? \"top-h2\": \"\"}>{props.title}</h2>\r\n            </div>\r\n            <div className=\"col-md-6 col-5\">\r\n                <h2 className={props.isTop ? \"warning top-h2\": \"warning\"} style={visibility}>Can't be zero</h2>\r\n            </div>\r\n        </div>\r\n        <div className=\"text-input\">\r\n            <img src={props.icon} alt=\"\"/>\r\n            <input \r\n                type=\"number\" \r\n                onChange={(event) => {\r\n                    const newValue = event.target.value;\r\n                    props.onChange(newValue)\r\n                    checkInput(newValue);\r\n                }} \r\n                value={props.value}\r\n                style={classes}    \r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TextInput","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React from 'react';\r\n\r\nfunction ResultHeading(props){\r\n    return (\r\n        <div className=\"col-5 result-headings\">\r\n            <p className=\"result-title\">{props.title}</p>\r\n            <p className=\"result-subtitle\">{props.subtitle}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultHeading;\r\n","import React from 'react';\r\n\r\nfunction Result(props){\r\n    return (\r\n        <div className=\"col-7\">\r\n            <p className=\"amount\">${(Math.round(props.value * 100) / 100).toFixed(2)}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport ResultHeading from './ResultHeading';\r\nimport Result from './Result';\r\nimport Button from './Button';\r\n\r\nfunction ResultsCard(props){\r\n\r\n    return (\r\n    <div className=\"col-md-12 col-lg-6\">\r\n        <div className=\"result section\">\r\n            <div className=\"results-container\">\r\n                <div className=\"row\">\r\n                    <ResultHeading title=\"Tip Amount\" subtitle=\"/ person\"/>\r\n                    <Result value={props.tip}/>\r\n                    <ResultHeading title=\"Total\" subtitle=\"/ person\"/>\r\n                    <Result value={props.total}/>\r\n                </div>\r\n                <div className=\"d-grid gap-2 btn-container\">\r\n                    <Button classes={[\"btn\", \"reset-btn\"]} content=\"RESET\" onClick={props.reset}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ResultsCard;\r\n","import React, {useState} from \"react\";\r\nimport Footer from \"./Footer\"\r\nimport Header from \"./Header\"\r\nimport Button from \"./Button\";\r\nimport CustomInput from \"./CustomInput\";\r\nimport TextInput from \"./TextInput\";\r\nimport dollar from \"../images/icon-dollar.svg\"\r\nimport person from \"../images/icon-person.svg\"\r\nimport ResultsCard from \"./ResultsCard\";\r\n\r\nfunction App(){\r\n    const [tipInputGrp, setTipInputGrp] = useState([\r\n        {id:\"5\", classes:[\"btn\", \"tip-btn\", \"selected-tip-btn\"], content:\"5%\"}, \r\n        {id:\"10\", classes:[\"btn\", \"tip-btn\"], content:\"10%\"},\r\n        {id:\"15\", classes:[\"btn\", \"tip-btn\"], content:\"15%\"},\r\n        {id:\"25\", classes:[\"btn\", \"tip-btn\"], content:\"25%\"},\r\n        {id:\"50\", classes:[\"btn\", \"tip-btn\"], content:\"50%\"},\r\n        {id:\"custom\", classes:[\"custom-input\"], content:\"Custom\"}\r\n    ]);\r\n\r\n    const [tipValue, setTipValue] = useState(\"5\");\r\n\r\n    const [bill, setBill] = useState(\"\");\r\n\r\n    const [people, setPeople] = useState(\"\");\r\n\r\n    const [customTip, setCustomTip] = useState(\"\");\r\n\r\n    const [tipAmount, setTipAmount] = useState(0);\r\n\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n    function onClickTipInput(id, value){\r\n        let btns = tipInputGrp.filter(item => {\r\n            return item.id !== \"custom\"\r\n        });\r\n        if(id === \"custom\"){\r\n            btns = btns.map(btn => ({\r\n                ...btn, \r\n                classes:[\"btn\", \"tip-btn\"]\r\n            }))\r\n        } else {\r\n            btns = btns.map(btn => {\r\n                if(btn.id === id){\r\n                    return {\r\n                        ...btn,\r\n                        classes:[\"btn\", \"tip-btn\", \"selected-tip-btn\"]\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...btn,\r\n                        classes:[\"btn\", \"tip-btn\"]\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        setTipInputGrp([...btns, {id:\"custom\", classes:[\"custom-input\"], content:\"Custom\"}]);\r\n        setTipValue(value);\r\n        if(value && bill && people){\r\n            const tip = ((parseInt(value)/100) * parseInt(bill)) / parseInt(people)\r\n            setTipAmount(tip);\r\n            setTotalAmount(tip + (bill/people));\r\n        } else {\r\n            setTipAmount(0);\r\n            setTotalAmount(0);\r\n        }\r\n    }\r\n\r\n    function onBillChange(value){\r\n        if(tipValue && value && people){\r\n            const tip = ((parseInt(tipValue)/100) * parseInt(value)) / parseInt(people);\r\n            setTipAmount(tip);\r\n            setTotalAmount(tip + (value/people))\r\n        } else {\r\n            setTipAmount(0);\r\n            setTotalAmount(0);\r\n        }\r\n        setBill(value);\r\n    }\r\n\r\n    function onPeopleChange(value){\r\n        if(tipValue && bill && value){\r\n            const tip = ((parseInt(tipValue)/100) * parseInt(bill)) / parseInt(value);\r\n            setTipAmount(tip);\r\n            setTotalAmount(tip + (bill/value));\r\n        } else {\r\n            setTipAmount(0);\r\n            setTotalAmount(0);\r\n        }\r\n        setPeople(value);\r\n    }\r\n\r\n    function onCustomTipChange(value){\r\n        if(value && bill && people){\r\n            const tip = ((parseInt(value)/100) * parseInt(bill)) / parseInt(people);\r\n            setTipAmount(tip);\r\n            setTotalAmount(tip + (bill/people));\r\n        } else {\r\n            setTipAmount(0);\r\n            setTotalAmount(0);\r\n        }\r\n        setCustomTip(value);\r\n        setTipValue(value);\r\n    }\r\n\r\n    function onReset(){\r\n        window.location.reload();\r\n    }\r\n\r\n    return <div>\r\n        <Header />\r\n        <div className=\"container-fluid\">\r\n            <div className=\"app\">\r\n                <div className=\"row gx-5\">\r\n                    <div className=\"col-md-12 col-lg-6\">\r\n                        <div className=\"section\">\r\n                            <TextInput title=\"Bill\" icon={dollar} isTop={true} onChange={onBillChange} value={bill}/>\r\n                            <div className=\"row g-2\">\r\n                            <div className=\"col-12\">\r\n                                <h2>Select Tip %</h2>\r\n                            </div>\r\n                            {tipInputGrp.map((input, index) => {\r\n                                if(index < (tipInputGrp.length - 1)){\r\n                                    return <div className=\"col-4\">\r\n                                        <Button key={input.id} id={input.id} onClick={onClickTipInput} classes={input.classes} content={input.content}/>\r\n                                    </div>\r\n                                } else {\r\n                                    return (\r\n                                        <div className=\"col-4\">\r\n                                            <CustomInput \r\n                                                key={input.id} \r\n                                                id={input.id} \r\n                                                onClick={onClickTipInput} \r\n                                                classes={input.classes} \r\n                                                content={input.content}\r\n                                                onChange={onCustomTipChange}\r\n                                                value={customTip}\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                }\r\n\r\n                            })}\r\n                            </div>\r\n                            <TextInput title=\"Number of People\" icon={person} onChange={onPeopleChange} value={people}/>\r\n                        </div>\r\n                    </div>\r\n                    <ResultsCard reset={onReset} tip={tipAmount} total={totalAmount}/>                          \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer />\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}